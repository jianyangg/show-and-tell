import { createStitches } from '@stitches/react';

export const {
  styled,
  css,
  globalCss,
  keyframes,
  getCssText,
  theme,
  createTheme,
  config,
} = createStitches({
  theme: {
    colors: {
      white: '#ffffff',
      black: '#000000',
      red: '#ff0000',
      green: '#00ff00',
      greenBg: 'rgba(64, 169, 64, 0.09)',
      blue: '#0000ff',
      yellow: '#ffff00',
      selectedBg: '#f5f5f5',
      fadedText: '#8f8f8f',
      gentleHighlight: '#f5f8fa',
      accentBlue: '#0a69da',
      linkBlue: '#1a0dab',
      linkVisited: '#681da8',
      resultSnippet: '#4d5156',
      tabActive: '#1a73e8',
      tabText: '#5f6368',
      divider: 'rgb(196, 199, 197)',
      accentBlueBg: '#ddf4ff',
      gray50: '#f9fafb',
      gray100: '#f3f4f6',
      gray150: '#e5e7eb',
      gray200: '#e5e7eb',
      gray250: '#d1d5db',
      gray300: '#d1d5db',
      gray400: '#9ca3af',
      gray450: '#808080',
      gray500: '#6b7280',
      gray600: '#4b5563',
      gray700: '#374151',
      gray800: '#1f2937',
      gray900: '#111827',
      charcoal: '#2c3e50',
      orange: '#F37021',
      orangeBg: '#FFF4E8',
      orangeHover: 'rgba(243, 112, 33, 0.16)',
      success: '#10b981',
      warning: '#f59e0b',
      error: '#ef4444',
      mainSurfacePrimary: '#f5f5f5',
      mainSurfaceSecondary: '#eeeeee',
      appBackground: '#ffffff',
      textPrimary: '#111827',
      textSecondary: '#4d5156',
      textMuted: '#6b7280',
      inputBackground: 'transparent',
      inputBackgroundFaint: 'rgba(247, 248, 250, 0.5)',
      hoverSurface: '#efefef',
      controlSurface: '#f3f4f6',
      controlSurfaceHover: '#e5e7eb',
      codeBlockBg: '#f3f4f6',
      codeBlockBorder: '#d1d5db',
      scrollbar: '#0000001a',
      shadowColor1: '#00000014',
      shadowColor2: '#0000009e',
      overlayBg: 'rgba(17, 24, 39, 0.90)',
      headerBgScrolled: 'rgba(255, 255, 255, 0.4)',
      highlightYellow: 'rgba(255, 235, 59, 0.5)',
      highlightBlue: 'rgba(33, 150, 243, 0.36)',
      highlightGreen: 'rgba(76, 175, 80, 0.36)',
      highlightPink: 'rgba(233, 30, 99, 0.36)',
      focusRing: '#0a69da',
    },
    space: {
      1: '4px',
      2: '8px',
      3: '12px',
      4: '16px',
      5: '20px',
      6: '24px',
      7: '28px',
      8: '32px',
      10: '40px',
      12: '48px',
      14: '56px',
      16: '64px',
      20: '80px',
      24: '96px',
      28: '112px',
      32: '128px',
      '1_5': '6px',
    },
    fontSizes: {
      xxs: '10px',
      xs: '12px',
      sm: '14px',
      md: '16px',
      lg: '18px',
      xl: '20px',
      '2xl': '26px',
      '3xl': '30px',
      '4xl': '36px',
    },
    fonts: {
      mono: '"Google Sans Mono", "JetBrains Mono", "Fira Code", "SF Mono", Consolas, monospace',
      sans: 'Inter, system-ui, -apple-system, sans-serif',
      article: 'Charter, "Bitstream Charter", "Sitka Text", Cambria, "Times New Roman", serif',
    },
    fontWeights: {
      light: '200',
      normal: '300',
      medium: '400',
      semibold: '500',
      bold: '600',
    },
    lineHeights: {
      tight: '1.2',
      normal: '1.5',
      relaxed: '1.8',
    },
    radii: {
      none: '0',
      modern: '20px',
      sm: '4px',
      md: '8px',
      lg: '12px',
      xl: '16px',
      '2xl': '20px',
      '3xl': '24px',
      moreRound: '28px',
      veryRound: '48px',
      full: '9999px',
      pill: '9999px',
    },
    shadows: {
      none: 'none',
      gentle: '0 2px 4px rgba(0, 0, 0, 0.06)',
      sm: '0 1px 3px rgba(0, 0, 0, 0.04)',
      md: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',
      lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',
      long: '0px 8px 12px 0px var(--colors-shadowColor1), 0px 0px 1px 0px var(--colors-shadowColor2)',
      card: '0 6px 20px rgba(0,0,0,0.18), 0 2px 8px rgba(0,0,0,0.12)',
      cardStrong: '0 10px 30px rgba(0,0,0,0.22), 0 4px 12px rgba(0,0,0,0.18)',
    },
    sizes: {
      containerXs: '20rem',
      touchTargetSm: '44px',
      touchTargetMd: '48px',
      touchTargetLg: '56px',
    },
    zIndices: {
      overlay: 50,
    },
  },
  media: {
    mobile: '(max-width: 767px)',
    tablet: '(min-width: 768px) and (max-width: 1023px)',
    sm: '(min-width: 640px)',
    md: '(min-width: 768px)',
    lg: '(min-width: 1024px)',
    xl: '(min-width: 1280px)',
    reduceMotion: '(prefers-reduced-motion: reduce)',
  },
  utils: {
    p: (value: string | number) => ({ padding: value }),
    pt: (value: string | number) => ({ paddingTop: value }),
    pr: (value: string | number) => ({ paddingRight: value }),
    pb: (value: string | number) => ({ paddingBottom: value }),
    pl: (value: string | number) => ({ paddingLeft: value }),
    px: (value: string | number) => ({
      paddingLeft: value,
      paddingRight: value,
    }),
    py: (value: string | number) => ({
      paddingTop: value,
      paddingBottom: value,
    }),
    m: (value: string | number) => ({ margin: value }),
    mt: (value: string | number) => ({ marginTop: value }),
    mr: (value: string | number) => ({ marginRight: value }),
    mb: (value: string | number) => ({ marginBottom: value }),
    ml: (value: string | number) => ({ marginLeft: value }),
    mx: (value: string | number) => ({ marginLeft: value, marginRight: value }),
    my: (value: string | number) => ({ marginTop: value, marginBottom: value }),
    br: (value: string | number) => ({ borderRadius: value }),
    shadow: (value: string) => ({ boxShadow: value }),
    overflowX: (value: string) => ({ overflowX: value }),
    overflowY: (value: string) => ({ overflowY: value }),
    willChange: (value: string) => ({ willChange: value }),
    userSelect: (value: string) => ({
      userSelect: value,
      WebkitUserSelect: value,
    }),
    pe: (value: string) => ({ pointerEvents: value }),
    z: (value: number | string) => ({ zIndex: value }),
    minW: (value: string | number) => ({ minWidth: value }),
    maxW: (value: string | number) => ({ maxWidth: value }),
    minH: (value: string | number) => ({ minHeight: value }),
    maxH: (value: string | number) => ({ maxHeight: value }),
    bg: (value: string) => ({ backgroundColor: value }),
  },
});

export const darkTheme = createTheme('dark-theme', {
  colors: {
    appBackground: '#121212',
    mainSurfacePrimary: '#2a2a2a',
    mainSurfaceSecondary: '#323232',
    textPrimary: '#ffffff',
    textSecondary: '#c7c7c7',
    textMuted: '#9aa0a6',
    inputBackground: 'transparent',
    inputBackgroundFaint: '#2d2d2dcc',
    selectedBg: '#2c2c2c',
    divider: 'rgb(74, 80, 80)',
    fadedText: '#bdbdbd',
    hoverSurface: '#303030',
    controlSurface: '#212121',
    controlSurfaceHover: '#343434',
    codeBlockBg: '#1f1f1f',
    codeBlockBorder: '#3a3a3a',
    accentBlueBg: 'rgba(138, 180, 248, 0.16)',
    orangeBg: 'rgba(243, 112, 33, 0.18)',
    greenBg: 'rgba(34, 139, 34, 0.20)',
    scrollbar: '#ffffff1a',
    shadowColor1: '#00000066',
    shadowColor2: '#000000cc',
    overlayBg: 'rgba(0, 0, 0, 0.85)',
    headerBgScrolled: 'rgba(42, 42, 42, 1)',
    linkBlue: '#8ab4f8',
    tabText: '#9aa0a6',
    highlightYellow: 'rgba(255, 214, 10, 0.72)',
    highlightBlue: 'rgba(120, 190, 255, 0.52)',
    highlightGreen: 'rgba(129, 199, 132, 0.52)',
    highlightPink: 'rgba(244, 143, 177, 0.58)',
    debug: '#ff00ff',
  },
});

export const pulse = keyframes({
  '0%, 100%': { opacity: 1 },
  '50%': { opacity: 0.3 },
});

export const fadeIn = keyframes({
  '0%': { opacity: 0 },
  '100%': { opacity: 1 },
});

export const globalStyles = globalCss({
  ':root': {
    '--article-font-base': '18px',
    '--article-font-offset': '0px',
  },
  'html, body': {
    fontFamily: 'Inter, sans-serif',
    fontSize: '1rem',
    margin: 0,
    padding: 0,
    backgroundColor: '$appBackground',
    color: '$textPrimary',
  },
  '*::-webkit-scrollbar': {
    width: '6px',
    height: '6px',
  },
  '*::-webkit-scrollbar-track': {
    backgroundColor: 'transparent',
  },
  '*::-webkit-scrollbar-thumb': {
    backgroundColor: 'transparent',
    borderRadius: '$md',
    transition: 'background-color 0.3s ease',
    '&:hover': {
      backgroundColor: '$divider',
    },
  },
  'html::-webkit-scrollbar': {
    width: '6px',
  },
  'html::-webkit-scrollbar-track': {
    backgroundColor: 'transparent',
  },
  'html::-webkit-scrollbar-thumb': {
    backgroundColor: 'transparent',
    borderRadius: '$md',
    transition: 'background-color 0.3s ease',
    '&:hover': {
      backgroundColor: '$divider',
    },
  },
});
